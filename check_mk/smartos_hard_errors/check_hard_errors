#!/usr/bin/env bash
# Copyright 2010-2012 Voxer IP LLC. All rights reserved.
# License: MIT
#
# Check for hard errors with kstat nagios style
#
# Author: Dave Eddy <dave@voxer.com>
#
# 2015 Alessio Ciregia
# Modified in order to work with check_mk

# blacklisted vendors
skipvendors=('TSSTcorp' 'KVM' 'TEAC')
skipsd=('1' '2' '3')

# Get a list of devices
sds=$(kstat -l sderr:::class | awk -F: '{print $2}')

# Function to extract a value from kstat
get_kstat() {
        IFS=$'\t' read _ value _ < <(kstat -p "$1")
        read value <<< "$value"
        echo "$value"
}


ret=0
err=''
# Loop the devices
while read sd; do
        # Check the vendor, skip it if it's blacklisted
        vendor=$(get_kstat "sderr:$sd::Vendor")

        skip=false

        for v in "${skipsd[@]}"; do
                if [[ "$sd" == "$v" ]]; then
                        skip=true
                        break
                fi
        done

        for v in "${skipvendors[@]}"; do
                if [[ "$vendor" == "$v" ]]; then
                        skip=true
                        break
                fi
        done
        $skip && continue

        # Check for hard errors
        hard_errors=$(get_kstat "sderr:$sd::Hard Errors")

        if (( hard_errors > 0 )); then
                # Append to `err` string
                err=${err:-critical:}
                err="$err sd $sd: $hard_errors hard errors;"
                ret=2
        fi
done <<< "$sds"

echo "$ret check_hard_errors - ${err:-ok: no hard errors found}"
exit "$ret"
